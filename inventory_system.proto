// Compile proto file into Python
// python3 -m grpc_tools.protoc -I . --python_out=. --grpc_python_out=. inventory_system.proto

syntax = "proto3";


/* A service that allows you to keep track of an inventory of products and the orders for those products */
// Note: Future TODOs are the planned updates for the inventory system to make it more general and more feature-rich
service InventorySystem {
    /* Gets products by their IDs */
    rpc GetProductsByID (IDs) returns (Products) {}

    /* Gets products by their names */
    rpc GetProductsByName (Names) returns (Products) {}

    /* Retrieves all products from a given manufacturer */
    rpc GetProductsByManufacturer (Manufacturer) returns (Products) {}
    
    /* Adds new products that do not have the same names as previous products and the IDs are
       assigned by the server; returns the IDs of the products if they were added successfully
       otherwise empty list of IDs */
    rpc AddProducts (Products) returns (IDs) {}

    /* Updates products (name and ID cannot be updated) */
    rpc UpdateProducts (Products) returns (Empty) {}

    /* Retrieves all products that are in stock  */
    rpc GetProductsInStock (Empty) returns (Products) {}

    // Future TODO: Create function to get all products no matter the stock
    // rpc GetProducts (Empty) returns (Products) {}

    /* Gets orders by their ID */
    rpc GetOrdersByID (IDs) returns (Orders) {}

    /* Creates an order if there is enough product in stock with an ID assigned by the server;
       returns a string if there is an exception otherwise empty string */
    rpc CreateOrder (Order) returns (ID) {}
    // Future TODO: replace with CreateOrders
    // rpc CreateOrders (Orders) returns (IDs) {}

    /* Update orders (ID cannot be updated) and if there is not enough product the order is not updated */
    rpc UpdateOrders (Orders) returns (Empty) {}

    /* Retrieves all orders that are unshipped, unpaid, or both  */
    rpc GetOrdersByStatus (OrderStatus) returns (Orders) {}

    // Future TODO: create new GetOrders that returns all orders
    // rpc GetOrders (Empty) returns (Orders) {}

    /* Clears inventory system database */
    rpc ClearDatabase (Empty) returns (Empty) {}

}


/* An empty message for functions with no parameters */
message Empty {
}

/* A message for passing the ID of the product or order wanted */
message ID {
    string id = 1;
}


/* A message for passing the name of the product wanted */
message Name {
    string name = 1;
}


/* The manufacturer of the products wanted */
message Manufacturer {
    string manufacturer = 1;
}

/* A message for passing the IDs of products or order wanted */
message IDs {
    repeated string ids = 1;
}


/* A message for passing the names of products wanted */
message Names {
    repeated string names = 1;
}


/* The manufacturer of the products wanted */
message Manufacturers {
    repeated string manufacturers = 1;
}

/* A product being added, retrieved, or updated in the inventory system */
message Product {
    string id = 1;
    string name = 2;
    string description = 3;
    string manufacturer = 4;
    double wholesale_cost = 5;
    double sale_cost = 6;
    int64 amount = 7;
}

/* Products being added, retrieved, or updated in the inventory system */
message Products {
    repeated Product products = 1;
}

/* The status of the orders being retrieved */
message OrderStatus {
    bool paid = 1;
    bool shipped = 2;
}

/* The date at which an order was placed */
message Date {
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
}

/* An order being added, retrieved, or updated in the inventory system */
message Order {
    string id = 1;
    string destination = 2;
    Date date = 3;
    repeated Product products = 4;
    bool is_paid = 5;
    bool is_shipped = 6;
}

/* Orders being added, retrieved, or updated in the inventory system */
message Orders {
    repeated Order orders = 1;
}
